From a4892969b7973c8bd211dfe67896d9609b82e4b0 Mon Sep 17 00:00:00 2001
From: Rudi <r.ihle@s-t.de>
Date: Sun, 30 Nov 2014 09:34:11 +0100
Subject: [PATCH] video: mxc_hdmi: Add command line switch to disable EDID
 processing.

Allow the use of the fallback videomode list even in case a valid EDID was received.
Thsi is done by adding 'mxc_hdmi.ignore_edid=1' to teh kernel command line. This
patch also changes the fallback modes to 'Standard' (i.e. S:xxxx instead of U:xxxx).

Signed-off-by: Rudi <r.ihle@s-t.de>
---
 drivers/video/mxc/mxc_hdmi.c |   27 +++++++++++++++++++--------
 1 file changed, 19 insertions(+), 8 deletions(-)

diff --git a/drivers/video/mxc/mxc_hdmi.c b/drivers/video/mxc/mxc_hdmi.c
index 43ccd29..cb26bdf 100644
--- a/drivers/video/mxc/mxc_hdmi.c
+++ b/drivers/video/mxc/mxc_hdmi.c
@@ -213,6 +213,10 @@ static char *rgb_quant_range = "default";
 module_param(rgb_quant_range, charp, S_IRUGO);
 MODULE_PARM_DESC(rgb_quant_range, "RGB Quant Range (default, limited, full)");
 
+static int ignore_edid = 0;
+module_param(ignore_edid, bool, S_IRUGO);
+MODULE_PARM_DESC(ignore_edid, "Ignore EDID (default=0)");
+
 static struct platform_device_id imx_hdmi_devtype[] = {
 	{
 		.name = "hdmi-imx6DL",
@@ -1932,8 +1936,11 @@ static void  mxc_hdmi_default_modelist(struct mxc_hdmi *hdmi)
 	/*Add all no interlaced CEA mode to default modelist */
 	for (i = 0; i < ARRAY_SIZE(mxc_cea_mode); i++) {
 		mode = &mxc_cea_mode[i];
-		if (!(mode->vmode & FB_VMODE_INTERLACED) && (mode->xres != 0))
-			fb_add_videomode(mode, &hdmi->fbi->modelist);
+		if (!(mode->vmode & FB_VMODE_INTERLACED) && (mode->xres != 0)) {
+			struct fb_videomode m = *mode;
+			m.flag |= FB_MODE_IS_STANDARD;
+			fb_add_videomode(&m, &hdmi->fbi->modelist);
+		}
 	}
 
 	console_unlock();
@@ -2001,13 +2008,17 @@ static void mxc_hdmi_cable_connected(struct mxc_hdmi *hdmi)
 	hdmi->cable_plugin = true;
 
 	/* HDMI Initialization Step C */
-	hdmi->edid_status = mxc_hdmi_read_edid(hdmi);
-
-	/* Read EDID again if first EDID read failed */
-	if (hdmi->edid_status == HDMI_EDID_NO_MODES ||
-			hdmi->edid_status == HDMI_EDID_FAIL) {
-		dev_info(&hdmi->pdev->dev, "Read EDID again\n");
+	if (ignore_edid) {
+		hdmi->edid_status = HDMI_EDID_NO_MODES;
+	} else {
 		hdmi->edid_status = mxc_hdmi_read_edid(hdmi);
+
+		/* Read EDID again if first EDID read failed */
+		if (hdmi->edid_status == HDMI_EDID_NO_MODES ||
+				hdmi->edid_status == HDMI_EDID_FAIL) {
+			dev_info(&hdmi->pdev->dev, "Read EDID again\n");
+			hdmi->edid_status = mxc_hdmi_read_edid(hdmi);
+		}
 	}
 
 	/* HDMI Initialization Steps D, E, F */
-- 
1.7.9.5

