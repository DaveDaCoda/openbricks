set -e

GEEXBOX_VERSION=`cat VERSION`
CONFIG=config
SCRIPTS=scripts
PACKAGES=packages
SOURCES=sources
BUILD_BASE=build
BUILD=$BUILD_BASE.$TARGET_ARCH
STAMPS_NOARCH=.stamps
STAMPS=$BUILD/$STAMPS_NOARCH
DOCS=DOCS
ROOT=`pwd`
TARGET_NAME=$TARGET_ARCH-pc-linux-uclibc
TOOLCHAIN=$BUILD/toolchain
SYSROOT_PREFIX=$ROOT/$TOOLCHAIN/$TARGET_NAME/sysroot
LIB_PREFIX=$SYSROOT_PREFIX/usr/local
TARGET_PREFIX=$ROOT/$TOOLCHAIN/bin/$TARGET_NAME-

TARGET_CC=${TARGET_PREFIX}gcc
TARGET_CXX=
TARGET_LD=${TARGET_PREFIX}ld
TARGET_AS=${TARGET_PREFIX}as
TARGET_AR=${TARGET_PREFIX}ar
TARGET_NM=${TARGET_PREFIX}nm
TARGET_RANLIB=${TARGET_PREFIX}ranlib
TARGET_STRIP=${TARGET_PREFIX}strip
TARGET_CPPFLAGS=
TARGET_CFLAGS="-Os -Wall -pipe"
TARGET_LDFLAGS=

if [ "$DEBUG" = yes ]; then
  TARGET_CFLAGS="$TARGET_CFLAGS -g3"
  TARGET_STRIP=touch
else
  TARGET_CFLAGS="$TARGET_CFLAGS -s -fomit-frame-pointer"
  TARGET_LDFLAGS="$TARGET_LDFLAGS -s"
fi

HOST_CC=$ROOT/$TOOLCHAIN/bin/host-gcc
HOST_CXX=$ROOT/$TOOLCHAIN/bin/host-g++
HOST_LD=ld
HOST_AS=as
HOST_AR=ar
HOST_NM=nm
HOST_RANLIB=ranlib
HOST_STRIP=strip
HOST_CPPFLAGS=""
HOST_CFLAGS="-O2 -Wall -pipe"
HOST_LDFLAGS=""

export CCACHE_DIR=$ROOT/$BUILD/.ccache
export HAVE_PKG_CONFIG=no

if [ -z "$PATH" -o "$PATH" = "${PATH#$ROOT/$TOOLCHAIN/bin:}" ]; then
  export PATH="$ROOT/$TOOLCHAIN/bin:$PATH"
fi

setup_toolchain() {
  if [ "$1" = "--optimize" ]; then
    OPTIMIZE=yes
    shift
  fi

  if [ "$1" = target ]; then
    export CC=$TARGET_CC
    export CXX=$TARGET_CXX
    export LD=$TARGET_LD
    export AS=$TARGET_AS
    export AR=$TARGET_AR
    export NM=$TARGET_NM
    export RANLIB=$TARGET_RANLIB
    export STRIP=$TARGET_STRIP
    export CPPFLAGS="$TARGET_CPPFLAGS"
    export CFLAGS="$TARGET_CFLAGS"
    export LDFLAGS="$TARGET_LDFLAGS"
    if [ "$OPTIMIZE" = yes ]; then
      case $TARGET_ARCH in
        i386)
          CFLAGS="$CFLAGS -march=$TARGET_CPU"
          ;;
        ppc)
          CFLAGS="$CFLAGS -maltivec"
          ;;
      esac
    fi
  elif [ "$1" = host ]; then
    export CC=$HOST_CC
    export CXX=$HOST_CXX
    export LD=$HOST_LD
    export AS=$HOST_AS
    export AR=$HOST_AR
    export NM=$HOST_NM
    export RANLIB=$HOST_RANLIB
    export STRIP=$HOST_STRIP
    export CPPFLAGS="$HOST_CPPFLAGS"
    export CFLAGS="$HOST_CFLAGS"
    export LDFLAGS="$HOST_LDFLAGS"
  fi
}
setup_toolchain target

SILENT_OUT=3
VERBOSE_OUT=4
if [ "$VERBOSE" = yes ]; then
  exec 3>/dev/null
  exec 4>&2
else
  exec 3>&2
  exec 4>/dev/null
fi
INDENT_SIZE=4

GEEXBOX_SRCS=http://www.geexbox.org/src/$GEEXBOX_VERSION
[ "$GEEXBOX_VERSION" = devel ] && GEEXBOX_VERSION=devel-`date +%Y%m%d`
ISO=geexbox-$GEEXBOX_VERSION-$LANG.$TARGET_ARCH.iso
GENERATOR_NAME=geexbox-generator-$GEEXBOX_VERSION.$TARGET_ARCH
INSTALLATOR_NAME=geexbox-installator-$GEEXBOX_VERSION.$TARGET_ARCH
PXE_NAME=geexbox-pxe/GEEXBOX.$TARGET_ARCH

HOST_NAME_CACHE=$BUILD/configtools/host_name
if [ -f $HOST_NAME_CACHE ]; then
  HOST_NAME=`cat $HOST_NAME_CACHE`
elif [ -x $BUILD/configtools/config.guess ]; then
  HOST_NAME=`$BUILD/configtools/config.guess`
fi

kernel_path() {
  ls -d $ROOT/$BUILD/linux*
}
