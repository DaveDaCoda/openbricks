diff -Naur udev-067.orig/udev_rules.c udev-067/udev_rules.c
--- udev-067.orig/udev_rules.c	2005-08-13 20:10:50.000000000 +0300
+++ udev-067/udev_rules.c	2005-08-14 08:20:38.000000000 +0300
@@ -270,13 +270,16 @@
 /* finds the lowest positive N such that <name>N isn't present in the udevdb
  * if <name> doesn't exist, 0 is returned, N otherwise
  */
-static int find_free_number(const char *name)
+static int find_free_number(const char *name, int zero)
 {
 	char devpath[PATH_SIZE];
 	char filename[PATH_SIZE];
 	int num = 0;
 
-	strlcpy(filename, name, sizeof(filename));
+	if (zero)
+		strlcpy(filename, name, sizeof(filename));
+	else
+		snprintf(filename, sizeof(filename), "%s%d", name, num);
 	while (1) {
 		dbg("look for existing node '%s'", filename);
 		if (udev_db_search_name(devpath, sizeof(devpath), filename) != 0) {
@@ -372,6 +375,7 @@
 		SUBST_RESULT,
 		SUBST_SYSFS,
 		SUBST_ENUM,
+		SUBST_ENUM_ZERO,
 		SUBST_PARENT,
 		SUBST_TEMP_NODE,
 		SUBST_ROOT,
@@ -392,6 +396,7 @@
 		{ .name = "result",		.fmt = 'c',	.type = SUBST_RESULT },
 		{ .name = "sysfs",		.fmt = 's',	.type = SUBST_SYSFS },
 		{ .name = "enum",		.fmt = 'e',	.type = SUBST_ENUM },
+		{ .name = "enum0",		.fmt = 'E',	.type = SUBST_ENUM_ZERO },
 		{ .name = "parent",		.fmt = 'P',	.type = SUBST_PARENT },
 		{ .name = "tempnode",		.fmt = 'N',	.type = SUBST_TEMP_NODE },
 		{ .name = "root",		.fmt = 'r',	.type = SUBST_ROOT },
@@ -546,12 +551,17 @@
 			dbg("substitute sysfs value '%s'", temp2);
 			break;
 		case SUBST_ENUM:
-			next_free_number = find_free_number(string);
+			next_free_number = find_free_number(string, 1);
 			if (next_free_number > 0) {
 				sprintf(temp2, "%d", next_free_number);
 				strlcat(string, temp2, maxsize);
 			}
 			break;
+		case SUBST_ENUM_ZERO:
+			next_free_number = find_free_number(string, 0);
+			sprintf(temp2, "%d", next_free_number);
+			strlcat(string, temp2, maxsize);
+			break;
 		case SUBST_PARENT:
 			if (!class_dev)
 				break;
