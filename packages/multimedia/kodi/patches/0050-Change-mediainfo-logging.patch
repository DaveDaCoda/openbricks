--- a/xbmc/cores/VideoPlayer/DVDCodecs/Video/DVDVideoCodecIMX.cpp	2016-10-02 11:49:42.415297936 +0200
+++ b/xbmc/cores/VideoPlayer/DVDCodecs/Video/DVDVideoCodecIMX.cpp	2016-10-02 11:50:57.875301018 +0200
@@ -504,8 +504,6 @@
   }
 
   m_hints = hints;
-  if (g_advancedSettings.CanLogComponent(LOGVIDEO))
-    CLog::Log(LOGDEBUG, "Let's decode with iMX VPU\n");
 
   int param = 0;
   SetVPUParams(VPU_DEC_CONF_INPUTTYPE, &param);
@@ -514,32 +512,31 @@
 #ifdef MEDIAINFO
   if (g_advancedSettings.CanLogComponent(LOGVIDEO))
   {
-    CLog::Log(LOGDEBUG, "Decode: MEDIAINFO: fpsrate %d / fpsscale %d\n", m_hints.fpsrate, m_hints.fpsscale);
-    CLog::Log(LOGDEBUG, "Decode: MEDIAINFO: CodecID %d \n", m_hints.codec);
-    CLog::Log(LOGDEBUG, "Decode: MEDIAINFO: StreamType %d \n", m_hints.type);
-    CLog::Log(LOGDEBUG, "Decode: MEDIAINFO: Level %d \n", m_hints.level);
-    CLog::Log(LOGDEBUG, "Decode: MEDIAINFO: Profile %d \n", m_hints.profile);
-    CLog::Log(LOGDEBUG, "Decode: MEDIAINFO: PTS_invalid %d \n", m_hints.ptsinvalid);
-    CLog::Log(LOGDEBUG, "Decode: MEDIAINFO: Tag %d \n", m_hints.codec_tag);
-    CLog::Log(LOGDEBUG, "Decode: MEDIAINFO: %dx%d \n", m_hints.width,  m_hints.height);
-  }
-  { char str_tag[128]; av_get_codec_tag_string(str_tag, sizeof(str_tag), m_hints.codec_tag);
-      CLog::Log(LOGDEBUG, "Decode: MEDIAINFO: Tag fourcc %s\n", str_tag);
-  }
-  if (m_hints.extrasize)
-  {
-    char buf[4096];
+    CLog::Log(LOGNOTICE, "MEDIAINFO: fpsrate %d / fpsscale %d\n", m_hints.fpsrate, m_hints.fpsscale);
+    CLog::Log(LOGNOTICE, "MEDIAINFO: CodecID %d\n", m_hints.codec);
+    CLog::Log(LOGNOTICE, "MEDIAINFO: StreamType %d\n", m_hints.type);
+    CLog::Log(LOGNOTICE, "MEDIAINFO: Level %d\n", m_hints.level);
+    CLog::Log(LOGNOTICE, "MEDIAINFO: Profile %d\n", m_hints.profile);
+    CLog::Log(LOGNOTICE, "MEDIAINFO: PTS_invalid %d\n", m_hints.ptsinvalid);
+    CLog::Log(LOGNOTICE, "MEDIAINFO: Tag %d\n", m_hints.codec_tag);
+    CLog::Log(LOGNOTICE, "MEDIAINFO: %dx%d\n", m_hints.width,  m_hints.height);
+
+    char str_tag[128];
+    av_get_codec_tag_string(str_tag, sizeof(str_tag), m_hints.codec_tag);
+    CLog::Log(LOGNOTICE, "MEDIAINFO: Tag fourcc %s\n", str_tag);
+  
+    if (m_hints.extrasize)
+    {
+      char buf[4096];
 
-    for (unsigned int i=0; i < m_hints.extrasize; i++)
-      sprintf(buf+i*2, "%02x", ((uint8_t*)m_hints.extradata)[i]);
+      for (unsigned int i=0; i < m_hints.extrasize; i++)
+        sprintf(buf+i*2, "%02x", ((uint8_t*)m_hints.extradata)[i]);
 
-    if (g_advancedSettings.CanLogComponent(LOGVIDEO))
-      CLog::Log(LOGDEBUG, "Decode: MEDIAINFO: %s extradata %d %s\n", *(char*)m_hints.extradata == 1 ? "AnnexB" : "avcC", m_hints.extrasize, buf);
-  }
-  if (g_advancedSettings.CanLogComponent(LOGVIDEO))
-  {
-    CLog::Log(LOGDEBUG, "Decode: MEDIAINFO: %d / %d \n", m_hints.width,  m_hints.height);
-    CLog::Log(LOGDEBUG, "Decode: aspect %f - forced aspect %d\n", m_hints.aspect, m_hints.forced_aspect);
+      CLog::Log(LOGNOTICE, "MEDIAINFO: %s extradata %d %s\n", *(char*)m_hints.extradata == 1 ? "AnnexB" : "avcC", m_hints.extrasize, buf);
+    }
+
+    CLog::Log(LOGNOTICE, "MEDIAINFO: %d / %d\n", m_hints.width,  m_hints.height);
+    CLog::Log(LOGNOTICE, "MEDIAINFO: aspect %f - forced_aspect %d\n", m_hints.aspect, m_hints.forced_aspect);
   }
 #endif
 
@@ -624,6 +621,9 @@
     return false;
   }
 
+  if (g_advancedSettings.CanLogComponent(LOGVIDEO))
+    CLog::Log(LOGNOTICE, "Let's decode with iMX VPU\n");
+
   std::list<EINTERLACEMETHOD> deintMethods({ EINTERLACEMETHOD::VS_INTERLACEMETHOD_AUTO,
                                              EINTERLACEMETHOD::VS_INTERLACEMETHOD_RENDER_BOB });
 
