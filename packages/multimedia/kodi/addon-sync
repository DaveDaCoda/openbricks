#! /bin/sh

if [ ! -e config/options ]; then
  echo "Please run this script from Openbricks root directory"
  exit 1
fi

. config/options
get_meta kodi

ADDON_KODIVER="16"
ADDON_BASE=$PKG_BUILD_DIR/project/cmake/addons
ADDON_PKG_PREFIX=$ROOT/packages/multimedia/kodi-addon-

# fetch addon repository
(cd $ADDON_BASE/bootstrap; cmake . -DCMAKE_INSTALL_PREFIX=../addons; make)

for d in $ADDON_BASE/addons/*.*; do
  addon=$(basename $d)
  addon_id=$(cut -f1 -d' ' "$d/$addon.txt")
  addon_url=$(cut -f2 -d' ' "$d/$addon.txt")
  addon_ref=$(cut -f3 -d' ' "$d/$addon.txt")

  if echo "$addon_ref" | grep -q "^[0-9a-fA-F]*$" ; then
    # we already have a hash...
    addon_githash="$(echo "${addon_ref}" | cut -b -7)"
  else
    # get hash for branch or tag name
    addon_githash="$(git ls-remote ${addon_url} ${addon_ref} | cut -b -7)"
  fi

  if [ -z "$addon_githash" ]; then
    echo "Failed to query hash for '$addon_ref' from $addon_url"
    continue
  fi

  # this is a new addon: create a package for it based on pvr.demo
  if [ ! -e ${ADDON_PKG_PREFIX}${addon_id}/meta ]; then
    if grep -q "all\|linux\|!android" "$d/platforms.txt" ; then
      echo "File ${ADDON_PKG_PREFIX}${addon_id}/meta not found. Creating new package..."

      mkdir -p ${ADDON_PKG_PREFIX}${addon_id}
      cp ${ADDON_PKG_PREFIX}pvr.demo/* ${ADDON_PKG_PREFIX}${addon_id}

      sed \
        -i ${ADDON_PKG_PREFIX}${addon_id}/meta \
        -e "s%^ADDON_ID=.*%ADDON_ID=\"${addon_id}\"%" \
        -e "s%^PKG_URL_REV=.*%PKG_URL_REV=\"1~${addon_githash}\"%" \
        -e "s%^PKG_URL=.*%PKG_URL=\"$(dirname ${addon_url})/\${ADDON_ID}.git\"%" \
        -e "s%ADDON_REV%ADDON_KODIVER%g" \
        -e "s%^ADDON_KODIVER=.*%ADDON_KODIVER=\"$ADDON_KODIVER\"%" \
        -e "s%^PKG_LONGDESC=.*%PKG_LONGDESC=\"Kodi addon ${addon_id}\"%" \
        -e "s%^PKG_SHORTDESC=.*%PKG_SHORTDESC=\"Kodi addon ${addon_id}\"%"
    fi

    continue
  fi

  # ensure that file name matches addon name
  if [ "$addon" != "$addon_id" ]; then
    echo "Addon name mismatch: \"${addon}\" should be \"${addon_id}\""
    continue
  fi

  # load package revision
  pkg_url_rev="$(grep "^PKG_URL_REV" ${ADDON_PKG_PREFIX}${addon_id}/meta | grep -o "[0-9]*~\w*")"
  meta_githash="$(echo "$pkg_url_rev" | cut -f2 -d~)"
  addon_refnum="$(echo "$pkg_url_rev" | cut -f1 -d~)"

  if [ -z "$addon_refnum" ]; then
    # invalid: let's start with 1
    addon_refnum="1"
  elif [ ! "$addon_githash" = "$meta_githash" ]; then
    # hash has changed: increment
    addon_refnum="$(expr $addon_refnum + 1)"
  fi

  echo "$addon_id $addon_url $addon_ref $addon_refnum~$addon_githash"
  #continue

  sed \
    -i ${ADDON_PKG_PREFIX}${addon_id}/meta \
    -e "s%^ADDON_ID=.*%ADDON_ID=\"${addon_id}\"%" \
    -e "s%^PKG_URL_REV=.*%PKG_URL_REV=\"${addon_refnum}~${addon_githash}\"%" \
    -e "s%^PKG_URL=.*%PKG_URL=\"$(dirname ${addon_url})/\${ADDON_ID}.git\"%" \
    -e "s%ADDON_REV%ADDON_KODIVER%g" \
    -e "s%^ADDON_KODIVER=.*%ADDON_KODIVER=\"${ADDON_KODIVER}\"%" \
    -e "s%^PKG_LONGDESC=.*%PKG_LONGDESC=\"Kodi addon ${addon_id}\"%" \
    -e "s%^PKG_SHORTDESC=.*%PKG_SHORTDESC=\"Kodi addon ${addon_id}\"%"

done

exit 0
