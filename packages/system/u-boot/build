#!/bin/sh

. config/options

. $CONFIG_MACHINE/meta

if [ -z "$MACHINE_UBOOT_CONFIG" ]; then
  echo "$TARGET_PLATFORM does not define any u-boot configuration, aborting."
  echo "Please add MACHINE_UBOOT_CONFIG to your platform meta file"
  exit 1
fi

get_meta $1

cd $PKG_BUILD_DIR

# strip in our toolchain is a symbolic link to the target strip.
# Move the toolchain/bin in the back of the PATH so we can still find mkimage
export PATH=$(echo $PATH | sed "s|$ROOT/$TOOLCHAIN/bin:||g" ):$ROOT/$TOOLCHAIN/bin

export MAKEFLAGS=-j1

make CROSS_COMPILE="$TARGET_PREFIX" $MACHINE_UBOOT_CONFIG $MACHINE_UBOOT_OPTIONS
make CROSS_COMPILE="$TARGET_PREFIX" HOSTCC="$HOST_CC" HOSTSTRIP="true"

ubootmajor=`grep "^VERSION *=" Makefile | grep -o "[0-9]*$"`
if [ -z "$ubootmajor" ] || [ "$ubootmajor" -lt 2014 ]; then
  make CROSS_COMPILE="$TARGET_PREFIX" HOSTCC="$TARGET_CC" HOSTSTRIP="$TARGET_STRIP" env
else
  make CROSS_COMPILE="$TARGET_PREFIX" env
fi


if [ -n "$MACHINE_UBOOT_CONFIG_EXTRA" ]; then
  echo "found extra config to build : $MACHINE_UBOOT_CONFIG_EXTRA"
  mkdir -p extra-uboot
  echo " Saving first UBOOT_CONFIG ..."
  if [ -n "$MACHINE_UBOOT_BINARY" ]; then
    cp $MACHINE_UBOOT_BINARY $MACHINE_UBOOT_BINARY.first
    mv $MACHINE_UBOOT_BINARY extra-uboot/$MACHINE_UBOOT_BINARY.`echo $MACHINE_UBOOT_CONFIG | sed -e "s/_config//"`
  else
    cp u-boot.bin u-boot.bin.first
    mv u-boot.bin u-boot.bin.`echo $MACHINE_UBOOT_CONFIG | sed -e "s/_config//"`
  fi

  for i in $MACHINE_UBOOT_CONFIG_EXTRA ; do
    echo "building $i"
    make CROSS_COMPILE="$TARGET_PREFIX" $i $MACHINE_UBOOT_OPTIONS
    make CROSS_COMPILE="$TARGET_PREFIX" HOSTCC="$HOST_CC" HOSTSTRIP="true"
    if [ -n "$MACHINE_UBOOT_BINARY_EXTRA" ]; then
      mv $MACHINE_UBOOT_BINARY_EXTRA extra-uboot/$MACHINE_UBOOT_BINARY_EXTRA.`echo $i | sed -e "s/_config//"`
    else 
      mv u-boot.bin extra-uboot/u-boot.bin.`echo $i | sed -e "s/_config//"`
    fi
  done
  echo "Restoring first u-boot"
  if [ -n "$MACHINE_UBOOT_BINARY" ]; then
    cp $MACHINE_UBOOT_BINARY.first $MACHINE_UBOOT_BINARY
  else
    cp u-boot.bin.first u-boot.bin
  fi
fi

# check for uEnv.txt
USER_ENV="$CONFIG_MACHINE/uEnv.txt"
[ ! -r "$USER_ENV" ] && USER_ENV="$CONFIG_PLATFORM/uEnv.txt"
if [ -r "$USER_ENV" ]; then
  cp $USER_ENV uEnv.txt
fi

# check for boot.cfg
BOOT_CFG="$CONFIG_MACHINE/boot.cfg"
[ ! -r "$BOOT_CFG" ] && BOOT_CFG="$CONFIG_PLATFORM/boot.cfg"

if [ "$TARGET_MACHINE" = "utilite" ]; then
  mkimage -n board/compulab/cm_fx6/imximage.cfg.cfgtmp -T imximage -e 0x00908000 -d spl/u-boot-spl.bin spl.img
  dd if=/dev/zero count=500 bs=1K | tr '\000' '\377' > cm-fx6-firmware
  dd if=spl.img of=cm-fx6-firmware bs=1K seek=1 conv=notrunc && dd if=u-boot.img of=cm-fx6-firmware bs=1K seek=64 conv=notrunc
fi

if [ -r "$BOOT_CFG" ]; then
  cp $BOOT_CFG boot.cfg

  [ $TARGET_PLATFORM = "omap4" ] && \
    sed -i "s%_DISPLAY_%$OMAP_DISPLAY%" boot.cfg

  MKIMAGE_ARGS=""
  [ -n "$UBOOT_ENTRYPOINT" ] && MKIMAGE_ARGS="$MKIMAGE_ARGS -e $UBOOT_ENTRYPOINT"
  [ -n "$UBOOT_LOADADDRESS" ] && MKIMAGE_ARGS="$MKIMAGE_ARGS -a $UBOOT_LOADADDRESS"

  mkimage -A arm -O u-boot -T script -C none \
    -n "$DISTRONAME Boot" $MKIMAGE_ARGS -d boot.cfg boot.ini
fi

# check for fw_env.config
ENV_CFG="$CONFIG_MACHINE/fw_env.config"
[ ! -r "$ENV_CFG" ] && ENV_CFG="$CONFIG_PLATFORM/fw_env.config"


# Prepare for install & installdev scripts

[ -d .install ] && rm -rf .install
mkdir -p .install/boot .install/share .install/etc .install/usr/bin
ln -s ../boot .install/share/u-boot

if [ -r "$ENV_CFG" ] && [ -r tools/env/fw_printenv ]; then
  cp $ENV_CFG .install/etc
  cp tools/env/fw_printenv .install/usr/bin
  ln -s fw_printenv .install/usr/bin/fw_setenv
fi


installdir=".install/boot"

if [ -f cm-fx6-firmware ] ; then
  cp cm-fx6-firmware $installdir
fi

if [ -n "$MACHINE_UBOOT_BINARY" ]; then
  cp $MACHINE_UBOOT_BINARY $installdir
else
  cp u-boot.bin $installdir
fi

if [ -n "$MACHINE_UBOOT_CONFIG_EXTRA" ]; then
  mkdir -p $installdir/extra-uboot
  cp extra-uboot/* $installdir/extra-uboot
fi

if [ -n "$MACHINE_UBOOT_LOADER" ]; then
  cp $MACHINE_UBOOT_LOADER $installdir
fi

[ -r boot.cfg ] && \
  cp boot.cfg $installdir

if [ -r boot.ini ]; then
  if [ -n "$MACHINE_UBOOT_SCRIPT" ]; then
    cp boot.ini $installdir/$MACHINE_UBOOT_SCRIPT
  else
    cp boot.ini $installdir
    # some boards read boot.scr by default
    cp $installdir/boot.ini $installdir/boot.scr
  fi  
fi

if [ -r uEnv.txt ] ; then
  cp uEnv.txt $installdir
fi
