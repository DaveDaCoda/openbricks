#!/bin/sh

# MEncoder/MPlayer stream recorder
# usage: mp_recorder file_location

MENCODER=/usr/bin/mencoder
CFG=/etc/mplayer/mencoder.conf

RECORD_SOURCE=/var/record_source
RECORD_STATUS=/var/record_status
RECORDER_CFG=/etc/recorder

mp_fifo=/var/mp_control
bg_file=/usr/share/mplayer/background.avi
record_fifo=/var/record_fifo

file="$1"

# Test for special input sources, given by $1 (with :// removed)
file_test () 
{ 
  [ -z $1 ] && { echo 0; return;}
  [ $1 = "file" -a -f "$file" ] && { echo 1; return;}
  [ -f "$file"  -a ! $1 = "file" ] && { echo 0; return;}
  [ ! -f "$file" -a $1 = "file" ]&& { echo 0; return;}
  file_strp=`echo $file | sed "s/^$1\:\/\///"`
  if [ $(( ${#file}-${#file_strp} )) -eq $(( ${#1} + 3 )) ]; then
    { echo 1; return;}
  else
    { echo 0; return;}
  fi
}

[ ! -f $RECORDER_CFG ] && exit 1
. $RECORDER_CFG

if [ ! -f $RECORD_STATUS ]; then
  [ -z "$file" ] && exit 1 # No source to record from.

  [ -z "$SAVE_PATH" ] && exit 1 # No save directory specified.

  [ ! -d "$SAVE_PATH" ] && exit 1 # not a valid directory.

  # Remounts the required disk RW in order to write to
  rw "$SAVE_PATH"

  # Set recording destination filename
  DATE=$(date '+%F')
  HOUR=$(date '+%H')
  MIN=$(date '+%M')
  OUTPUT=record-$DATE-$HOUR-$MIN

  # Edit MEncoder configuration with the correct destination filename.
  sed -i -e "s|^o=\".*\.\(.*\)\"|o=\"$SAVE_PATH/$OUTPUT\.\1\"|" $CFG

  # Check if dvb source, and if so force dump stream.
  [ `file_test dvb` -eq 1 ] && RECORD_PROFILE=dump

  # Force release of (possibly) locked v4l/dvb devices
  if [ `file_test dvb` -eq 1 -o `file_test tv` -eq 1 ]; then
    echo "loadfile $bg_file" > $mp_fifo &
    sleep 1
  fi

  # Start Recording in background
  $MENCODER -profile $RECORD_PROFILE "$file" &> /dev/null &

  # Give MEncoder some time to start.
  sleep 1

  # Allow more time for network streaming sources
  [ `file_test mms` -eq 1 -o `file_test mmst` -eq 1 -o `file_test http` -eq 1 -o `file_test http_proxy` -eq 1 -o `file_test rtp` -eq 1 -o `file_test rtsp` -eq 1 -o `file_test ftp` -eq 1 -o `file_test udp` -eq 1 -o `file_test unsv` -eq 1 ] && sleep 10

  # Test if MEncoder really has started (no bail out, whatever the reason)
  [ -z "`pidof mencoder`" ] && exit 1

  # Create a FIFO, dump recording to and ask MPlayer to play from there.
  [ -f $record_fifo ] && rm $record_fifo
  mkfifo $record_fifo
  tail -f "$SAVE_PATH/$OUTPUT.mpg" > $record_fifo &
  echo "loadfile $record_fifo" > $mp_fifo &

  # Keep trace of original stream source in order to restore it at
  # the end of recording session
  echo "SOURCE=\"$file\"" > $RECORD_SOURCE

  # Create recorder status file.
  echo "" > $RECORD_STATUS
elif [ -f $RECORD_STATUS ]; then
  # Stop MEncoder recording
  [ -z "`pidof mencoder`" ] || killall mencoder
  [ -z "`pidof mencoder`" ] || killall -9 mencoder

  # Stop output to FIFO and remove it.
  [ -z "`pidof tail`" ] || killall tail
  [ -f $record_fifo ] && rm $record_fifo

  # Remounts the required disk RO for safety.
  ro "$SAVE_PATH"

  # Reload the original source.
  [ -f $RECORD_SOURCE ] && . $RECORD_SOURCE && rm $RECORD_SOURCE
  echo "loadfile \"$SOURCE\"" > $mp_fifo &

  # Remove recorder status file
  rm $RECORD_STATUS
fi

