* use lrint() whenever the left-value is integer
this allows the compliation to use lrint() inlined math macros

without this patch, gcc 4.1.0 optimize rint() calls into lrint()
but, we dont have function of lrint(), just inlined math macro.

diff -Nur MPlayer-20060223.orig/libavcodec/snow.c MPlayer-20060223/libavcodec/snow.c
--- MPlayer-20060223.orig/libavcodec/snow.c	Thu Feb 23 12:11:29 2006
+++ MPlayer-20060223/libavcodec/snow.c	Fri Mar 24 15:36:29 2006
@@ -4060,7 +4060,7 @@
     }
 
     if(pict->quality){
-        s->qlog= rint(QROOT*log(pict->quality / (float)FF_QP2LAMBDA)/log(2));
+        s->qlog= lrint(QROOT*log(pict->quality / (float)FF_QP2LAMBDA)/log(2));
         //<64 >60
         s->qlog += 61*QROOT/8;
     }else{
diff -Nur MPlayer-20060223.orig/libmpcodecs/vf_hue.c MPlayer-20060223/libmpcodecs/vf_hue.c
--- MPlayer-20060223.orig/libmpcodecs/vf_hue.c	Tue Dec 13 01:15:48 2005
+++ MPlayer-20060223/libmpcodecs/vf_hue.c	Fri Mar 24 15:37:57 2006
@@ -31,8 +31,8 @@
 		    int w, int h, float hue, float sat)
 {
 	int i;
-	const int s= rint(sin(hue) * (1<<16) * sat);
-	const int c= rint(cos(hue) * (1<<16) * sat);
+	const int s= lrint(sin(hue) * (1<<16) * sat);
+	const int c= lrint(cos(hue) * (1<<16) * sat);
 
 	while (h--) {
 		for (i = 0; i<w; i++)
@@ -110,10 +110,10 @@
 	case VFCTRL_GET_EQUALIZER:
 		eq = data;
 		if (!strcmp(eq->item,"hue")) {
-			eq->value = rint(vf->priv->hue *100 / M_PI);
+			eq->value = lrint(vf->priv->hue *100 / M_PI);
 			return CONTROL_TRUE;
 		}else if (!strcmp(eq->item,"saturation")) {
-			eq->value = rint(vf->priv->saturation*100 - 100);
+			eq->value = lrint(vf->priv->saturation*100 - 100);
 			return CONTROL_TRUE;
 		}
 		break;
diff -Nur MPlayer-20060223.orig/libvo/vo_dxr3.c MPlayer-20060223/libvo/vo_dxr3.c
--- MPlayer-20060223.orig/libvo/vo_dxr3.c	Thu Feb 23 12:11:14 2006
+++ MPlayer-20060223/libvo/vo_dxr3.c	Fri Mar 24 15:37:29 2006
@@ -1305,7 +1305,7 @@
 	y = 255;
     if(y < 0)
 	y = 0;
-    return rint(y);
+    return lrint(y);
 }
 
 static int overlay_set_keycolor(overlay_t *o, int color) {
