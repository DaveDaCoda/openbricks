diff -r df3f5d46d866 Makefile
--- a/Makefile	Sun Apr 30 17:12:19 2006 +0200
+++ b/Makefile	Sun Apr 30 17:36:01 2006 +0200
@@ -21,48 +21,46 @@ INSTALLSTRIP = -s
 INSTALLSTRIP = -s
 endif
 
-SRCS_COMMON = asxparser.c \
-              codec-cfg.c \
-              cpudetect.c \
-              edl.c \
-              find_sub.c \
-              m_config.c \
-              m_option.c \
-              m_struct.c \
-              parser-cfg.c \
-              playtree.c \
-              playtreeparser.c \
-              spudec.c \
-              sub_cc.c \
-              subreader.c \
-              vobsub.c \
-
-SRCS_MENCODER = mencoder.c \
-                mp_msg-mencoder.c \
-                $(SRCS_COMMON) \
-                divx4_vbr.c \
-                libvo/aclib.c \
-                libvo/font_load.c \
-                libvo/font_load_ft.c \
-                libvo/osd.c \
-                libvo/sub.c \
-                parser-mecmd.c \
-                xvid_vbr.c \
-
-SRCS_MPLAYER = mplayer.c \
-               m_property.c \
-               mp_msg.c \
-               $(SRCS_COMMON) \
-               mixer.c \
-               parser-mpcmd.c \
-               subopt-helper.c \
+SRCS =  mplayer.c \
+        m_property.c \
+        mp_msg.c \
+        asxparser.c \
+        codec-cfg.c \
+        cpudetect.c \
+        edl.c \
+        find_sub.c \
+        m_config.c \
+        m_option.c \
+        m_struct.c \
+        parser-cfg.c \
+        playtree.c \
+        playtreeparser.c \
+        spudec.c \
+        sub_cc.c \
+        subreader.c \
+        vobsub.c \
+        mixer.c \
+        parser-mpcmd.c \
+        subopt-helper.c \
+
+ifeq ($(MENCODER),yes)
+SRCS += mencoder.c \
+        divx4_vbr.c \
+        libvo/aclib.c \
+        libvo/font_load.c \
+        libvo/font_load_ft.c \
+        libvo/osd.c \
+        libvo/sub.c \
+        parser-mecmd.c \
+        xvid_vbr.c \
+
+endif
 
 ifeq ($(UNRARLIB),yes)
-SRCS_COMMON += unrarlib.c
-endif
-
-OBJS_MENCODER = $(SRCS_MENCODER:.c=.o)
-OBJS_MPLAYER = $(SRCS_MPLAYER:.c=.o)
+SRCS += unrarlib.c
+endif
+
+OBJS = $(SRCS:.c=.o)
 
 VO_LIBS = $(AA_LIB) \
           $(X_LIB) \
@@ -345,17 +343,19 @@ libmenu/libmenu.a:
 libmenu/libmenu.a:
 	$(MAKE) -C libmenu
 
-MPLAYER_DEP = $(OBJS_MPLAYER) $(COMMON_DEPS)
+DEP = $(OBJS) $(COMMON_DEPS)
 
 ifeq ($(LIBMENU),yes)
-MPLAYER_DEP += libmenu/libmenu.a
+DEP += libmenu/libmenu.a
 MENU_LIBS = libmenu/libmenu.a
 PARTS += libmenu
 else
 MENU_LIBS =
 endif
 
-MENCODER_DEP = $(OBJS_MENCODER) $(COMMON_DEPS) libmpcodecs/libmpencoders.a
+ifeq ($(MENCODER),yes)
+DEP += libmpcodecs/libmpencoders.a
+endif
 
 ifeq ($(VIDIX),yes)
 VIDIX_LIBS = vidix/libvidix.a
@@ -364,10 +364,17 @@ endif
 endif
 
 ifeq ($(TARGET_WIN32),yes)
-OBJS_MPLAYER += osdep/mplayer-rc.o
-endif
-
-LIBS_MPLAYER = libvo/libvo.a \
+OBJS += osdep/mplayer-rc.o
+endif
+
+ifeq ($(MENCODER),yes)
+LIBS += libmpcodecs/libmpencoders.a \
+	$(ENCORE_LIB) \
+	$(MLIB_LIB) \
+ 
+endif
+
+LIBS        += libvo/libvo.a \
                libao2/libao2.a \
                input/libinput.a \
                $(MENU_LIBS) \
@@ -385,11 +392,11 @@ LIBS_MPLAYER = libvo/libvo.a \
                $(MATH_LIB) \
                $(LIBC_LIB) \
 
-$(PRG):	$(MPLAYER_DEP)
+$(PRG):	$(DEP)
     ifeq ($(TARGET_WIN32),yes)
 	windres -o osdep/mplayer-rc.o osdep/mplayer.rc
     endif
-	$(CC) $(CFLAGS) -o $(PRG) $(OBJS_MPLAYER) $(LIBS_MPLAYER)
+	$(CC) $(CFLAGS) -o $(PRG) $(OBJS) $(LIBS)
 
 mplayer.exe.spec.c: libmpcodecs/libmpcodecs.a
 	winebuild -fPIC -o mplayer.exe.spec.c -exe mplayer.exe -mcui \
@@ -399,7 +406,7 @@ mplayer.exe.so:	$(MPLAYER_DEP) mplayer.e
 mplayer.exe.so:	$(MPLAYER_DEP) mplayer.exe.spec.c
 	$(CC) $(CFLAGS) -Wall -shared \
 	-Wl,-rpath,/usr/local/lib -Wl,-Bsymbolic \
-	-o mplayer.exe.so $(OBJS_MPLAYER) mplayer.exe.spec.c \
+	-o mplayer.exe.so $(OBJS) mplayer.exe.spec.c \
 	libvo/libvo.a libao2/libao2.a $(MENU_LIBS) $(VIDIX_LIBS) \
 	$(GUI_LIBS) $(COMMON_LIBS) $(GTK_LIBS) $(VO_LIBS) \
 	$(AO_LIBS) $(EXTRA_LIB) $(LIRC_LIB) $(LIRCC_LIB) \
@@ -407,26 +414,15 @@ mplayer.exe.so:	$(MPLAYER_DEP) mplayer.e
 
 mplayer_wine.so:	$(MPLAYER_DEP)
 	$(CC) $(CFLAGS) -shared -Wl,-Bsymbolic -o mplayer_wine.so \
-          mplayer_wine.spec.c $(OBJS_MPLAYER) libvo/libvo.a \
+          mplayer_wine.spec.c $(OBJS) libvo/libvo.a \
 	  libao2/libao2.a $(MENU_LIBS) $(VIDIX_LIBS) $(GUI_LIBS) \
 	  $(COMMON_LIBS) $(GTK_LIBS) $(VO_LIBS) $(AO_LIBS) \
 	  $(EXTRA_LIB) $(LIRC_LIB) $(LIRCC_LIB) $(STATIC_LIB) \
 	  -lwine $(ARCH_LIB) $(MATH_LIB) \
 
 ifeq ($(MENCODER),yes)
-LIBS_MENCODER = libmpcodecs/libmpencoders.a \
-                $(ENCORE_LIB) \
-                $(COMMON_LIBS) \
-                $(EXTRA_LIB) \
-                $(MLIB_LIB) \
-                $(LIRC_LIB) \
-                $(LIRCC_LIB) \
-                $(ARCH_LIB) \
-                $(MATH_LIB) \
-                $(LIBC_LIB) \
-
-$(PRG_MENCODER): $(MENCODER_DEP)
-	$(CC) $(CFLAGS) -o $(PRG_MENCODER) $(OBJS_MENCODER) $(LIBS_MENCODER)
+$(PRG_MENCODER): $(PRG)
+	-ln -sf $(PRG) $(PRG_MENCODER)
 endif
 
 codecs.conf.h: $(PRG_CFG) etc/codecs.conf
@@ -461,7 +457,7 @@ endif
 		fi ; \
 	done
 ifeq ($(MENCODER),yes)
-	$(INSTALL) -m 755 $(INSTALLSTRIP) $(PRG_MENCODER) $(BINDIR)/$(PRG_MENCODER)
+	-ln -sf $(PRG) $(BINDIR)/$(PRG_MENCODER)
 	for i in $(MAN_LANG); do \
 		if test "$$i" = en ; then \
 			ln -sf mplayer.1 $(MANDIR)/man1/mencoder.1 ; \
@@ -520,7 +516,7 @@ dep:	depend
 dep:	depend
 
 depend:
-	$(CC) -MM $(CFLAGS) -DCODECS2HTML mplayer.c mencoder.c $(SRCS_MPLAYER) $(SRCS_MENCODER) 1>.depend
+	$(CC) -MM $(CFLAGS) -DCODECS2HTML mplayer.c mencoder.c $(SRCS) 1>.depend
 	@for a in $(PARTS); do $(MAKE) -C $$a dep; done
 
 # ./configure must be run if it changed in CVS
@@ -564,7 +560,7 @@ mplayer.o mencoder.o vobsub.o: version.h
 mplayer.o mencoder.o vobsub.o: version.h
 
 # temporary measure to make sure help_mp.h is built. we desperately need correct deps!
-$(MPLAYER_DEP) $(MENCODER_DEP): help_mp.h
+$(DEP): help_mp.h
 
 #
 # the following lines provide _partial_ dependency information
diff -r df3f5d46d866 cfg-common.h
--- a/cfg-common.h	Sun Apr 30 17:12:19 2006 +0200
+++ b/cfg-common.h	Sun Apr 30 17:36:01 2006 +0200
@@ -364,6 +364,9 @@ extern char* edl_output_filename;
 extern char* edl_output_filename;
 
 #ifdef USE_TV
+#ifdef FOR_MENCODER
+extern m_option_t tvopts_conf[];
+#else
 m_option_t tvopts_conf[]={
 	{"on", "-tv on is deprecated, use tv:// instead.\n", CONF_TYPE_PRINT, 0, 0, 0, NULL},
 	{"immediatemode", &tv_param_immediate, CONF_TYPE_INT, CONF_RANGE, 0, 1, NULL},
@@ -409,6 +412,7 @@ m_option_t tvopts_conf[]={
 	{NULL, NULL, 0, 0, 0, 0, NULL}
 };
 #endif
+#endif
 
 #ifdef HAS_DVBIN_SUPPORT
 #include "libmpdemux/dvbin.h"
@@ -435,6 +439,9 @@ extern float sws_chr_sharpen;
 extern float sws_chr_sharpen;
 extern float sws_lum_sharpen;
 
+#ifdef FOR_MENCODER
+extern m_option_t scaler_filter_conf[];
+#else
 m_option_t scaler_filter_conf[]={
 	{"lgb", &sws_lum_gblur, CONF_TYPE_FLOAT, 0, 0, 100.0, NULL},
 	{"cgb", &sws_chr_gblur, CONF_TYPE_FLOAT, 0, 0, 100.0, NULL},
@@ -444,6 +451,7 @@ m_option_t scaler_filter_conf[]={
 	{"cs", &sws_chr_sharpen, CONF_TYPE_FLOAT, 0, -100.0, 100.0, NULL},
 	{NULL, NULL, 0, 0, 0, 0, NULL}
 };
+#endif
 
 /* VIVO demuxer options: */
 extern int vivo_param_version;
@@ -456,6 +464,9 @@ extern int vivo_param_vformat;
 extern int vivo_param_vformat;
 extern char *dvd_device, *vcd_device, *cdda_device;
 
+#ifdef FOR_MENCODER
+extern m_option_t vivoopts_conf[];
+#else
 m_option_t vivoopts_conf[]={
 	{"version", &vivo_param_version, CONF_TYPE_INT, 0, 0, 0, NULL},
 	/* audio options */
@@ -469,6 +480,7 @@ m_option_t vivoopts_conf[]={
 	{"vformat", &vivo_param_vformat, CONF_TYPE_INT, 0, 0, 0, NULL},
 	{NULL, NULL, 0, 0, 0, 0, NULL}
 };
+#endif
 
 extern int    mf_w;
 extern int    mf_h;
@@ -477,6 +489,9 @@ extern m_obj_settings_t* vf_settings;
 extern m_obj_settings_t* vf_settings;
 extern m_obj_list_t vf_obj_list;
 
+#ifdef FOR_MENCODER
+extern m_option_t mfopts_conf[];
+#else
 m_option_t mfopts_conf[]={
         {"on", "-mf on is deprecated, use mf:// instead.\n", CONF_TYPE_PRINT, 0, 0, 1, NULL},
         {"w", &mf_w, CONF_TYPE_INT, 0, 0, 0, NULL},
@@ -485,17 +500,27 @@ m_option_t mfopts_conf[]={
         {"type", &mf_type, CONF_TYPE_STRING, 0, 0, 0, NULL},
         {NULL, NULL, 0, 0, 0, 0, NULL}
 };
+#endif
 						
 extern m_obj_settings_t* vo_plugin_args;
 
 #include "libaf/af.h"
 extern af_cfg_t af_cfg; // Audio filter configuration, defined in libmpcodecs/dec_audio.c
+
+#ifdef FOR_MENCODER
+extern m_option_t audio_filter_conf[];
+#else
 m_option_t audio_filter_conf[]={       
 	{"list", &af_cfg.list, CONF_TYPE_STRING_LIST, 0, 0, 0, NULL},
         {"force", &af_cfg.force, CONF_TYPE_INT, CONF_RANGE, 0, 7, NULL},
 	{NULL, NULL, 0, 0, 0, 0, NULL}
 };
-
+#endif
+
+
+#ifdef FOR_MENCODER
+extern m_option_t msgl_config[];
+#else
 m_option_t msgl_config[]={
 	{ "all", &mp_msg_level_all, CONF_TYPE_INT, CONF_RANGE, -1, 9, NULL},
 
@@ -586,6 +611,7 @@ m_option_t msgl_config[]={
         "   identify   - identify output\n"
         "\n", CONF_TYPE_PRINT, CONF_NOCFG, 0, 0, NULL},
 };
+#endif
 
 #ifdef WIN32
 
diff -r df3f5d46d866 cfg-mencoder.h
--- a/cfg-mencoder.h	Sun Apr 30 17:12:19 2006 +0200
+++ b/cfg-mencoder.h	Sun Apr 30 17:36:01 2006 +0200
@@ -3,7 +3,9 @@
  * config for cfgparser
  */
 
+#define FOR_MENCODER 1
 #include "cfg-common.h"
+#undef FOR_MENCODER
 
 #ifdef USE_FAKE_MONO
 extern int fakemono; // defined in dec_audio.c
diff -r df3f5d46d866 mencoder.c
--- a/mencoder.c	Sun Apr 30 17:12:19 2006 +0200
+++ b/mencoder.c	Sun Apr 30 17:36:01 2006 +0200
@@ -74,7 +74,7 @@
 
 #include "osdep/timer.h"
 
-#include "get_path.c"
+extern char *get_path(char *filename);
 
 #ifdef USE_LIBAVCODEC
 #ifdef USE_LIBAVCODEC_SO
@@ -85,30 +85,27 @@
 #endif
 
 #include "libmpcodecs/ae.h"
-int vo_doublebuffering=0;
-int vo_directrendering=0;
-int vo_config_count=0;
-int forced_subs_only=0;
+extern forced_subs_only;
 
 //--------------------------
 
 // cache2:
-int stream_cache_size=-1;
+extern int stream_cache_size;
 #ifdef USE_STREAM_CACHE
 extern int cache_fill_status;
 
-float stream_cache_min_percent=20.0;
-float stream_cache_seek_min_percent=50.0;
+extern float stream_cache_min_percent;
+extern float stream_cache_seek_min_percent;
 #else
 #define cache_fill_status 0
 #endif
 
-int audio_id=-1;
-int video_id=-1;
-int dvdsub_id=-2;
-int vobsub_id=-1;
-char* audio_lang=NULL;
-char* dvdsub_lang=NULL;
+extern int audio_id;
+extern int video_id;
+extern int dvdsub_id;
+extern int vobsub_id;
+extern char* audio_lang;
+extern char* dvdsub_lang;
 static char* spudec_ifo=NULL;
 
 static char** audio_codec_list=NULL;  // override audio codec
@@ -130,14 +127,14 @@ int out_file_format=MUXER_TYPE_AVI;	// d
 //void resync_audio_stream(sh_audio_t *sh_audio){}
 
 extern int verbose; // must be global!
-int quiet=0;
-double video_time_usage=0;
-double vout_time_usage=0;
+extern int quiet;
+extern double video_time_usage;
+extern double vout_time_usage;
 double max_video_time_usage=0;
 double max_vout_time_usage=0;
 double cur_video_time_usage=0;
 double cur_vout_time_usage=0;
-int benchmark=0;
+extern int benchmark;
 
 extern int mp_msg_levels[MSGT_MAX];
 extern int mp_msg_level_all;
@@ -158,10 +155,10 @@ static int ignore_start=0;
 static int ignore_start=0;
 static int audio_density=2;
 
-float force_fps=0;
+extern float force_fps;
 static float force_ofps=0; // set to 24 for inverse telecine
 static int skip_limit=-1;
-float playback_speed=1.0;
+extern float playback_speed;
 
 static int force_srate=0;
 static int audio_output_format=0;
@@ -184,22 +181,22 @@ static int play_n_frames_mf=-1;
 #include "libvo/sub.h"
 
 // sub:
-char *font_name=NULL;
-char *sub_font_name=NULL;
+extern char *font_name;
+extern char *sub_font_name;
 #ifdef HAVE_FONTCONFIG
 extern int font_fontconfig;
 #endif
-float font_factor=0.75;
-char **sub_name=NULL;
-float sub_delay=0;
-float sub_fps=0;
-int   sub_auto = 0;
-int   subcc_enabled=0;
-int   suboverlap_enabled = 1;
+extern float font_factor;
+extern char **sub_name;
+extern float sub_delay;
+extern float sub_fps;
+extern int   sub_auto;
+extern int   subcc_enabled;
+extern int   suboverlap_enabled;
 
 #ifdef USE_SUB
 static sub_data* subdata=NULL;
-float sub_last_pts = -303;
+extern float sub_last_pts;
 #endif
 
 int auto_expand=1;
@@ -217,12 +217,6 @@
 char *info_sourceform=NULL;
 char *info_comment=NULL;
 
-// Needed by libmpdemux.
-int mp_input_check_interrupt(int time) {
-  usec_sleep(time);
-  return 0;
-}
-
 //char *out_audio_codec=NULL; // override audio codec
 //char *out_video_codec=NULL; // override video codec
 
@@ -299,7 +296,7 @@ static void mencoder_exit(int level, cha
     exit(level);
 }
 
-void parse_cfgfiles( m_config_t* conf )
+void me_parse_cfgfiles( m_config_t* conf )
 {
   char *conffile;
   if ((conffile = get_path("mencoder.conf")) == NULL) {
@@ -360,7 +357,7 @@ static FILE* muxer_f=NULL;
 
 extern void print_wave_header(WAVEFORMATEX *h, int verbose_level);
 
-int main(int argc,char* argv[]){
+int me_main(int argc,char* argv[]){
 
 stream_t* stream=NULL;
 demuxer_t* demuxer=NULL;
@@ -405,6 +402,7 @@ ao_data_t ao_data = {0,0,0,0,OUTBURST,-1
 
 audio_encoding_params_t aparams;
 audio_encoder_t *aencoder = NULL;
+ sub_auto = 0;
 
   mp_msg_init();
   mp_msg(MSGT_CPLAYER,MSGL_INFO, "MEncoder " VERSION " (C) 2000-2006 MPlayer Team\n");
@@ -463,7 +461,7 @@ if(!codecs_file || !parse_codec_cfg(code
 
  mconfig = m_config_new();
  m_config_register_options(mconfig,mencoder_opts);
- parse_cfgfiles(mconfig);
+ me_parse_cfgfiles(mconfig);
  filelist = m_config_parse_me_command_line(mconfig, argc, argv);
  if(!filelist) mencoder_exit(1, MSGTR_ErrorParsingCommandLine);
 
diff -r df3f5d46d866 mplayer.c
--- a/mplayer.c	Sun Apr 30 17:12:19 2006 +0200
+++ b/mplayer.c	Sun Apr 30 17:36:01 2006 +0200
@@ -2360,7 +2360,7 @@ static int set_property_command(mp_cmd_t
 ///@}
 // Command2Property
 
-int main(int argc,char* argv[]){
+int mp_main(int argc,char* argv[]){
 
 
 char * mem_ptr;
@@ -5320,3 +5320,14 @@ exit_player_with_rc(MSGTR_Exit_eof, 0);
 
 return 1;
 }
+
+int
+main (int argc, char **argv)
+{
+#ifdef HAVE_MENCODER
+  if (strstr (argv[0], "mencoder"))
+    return me_main (argc, argv);
+  else
+#endif
+    return mp_main (argc, argv);
+}
